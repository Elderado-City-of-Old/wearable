/*
  Scan
  This example scans for BLE peripherals and prints out their advertising details:
  address, local name, adverised service UUID's.
  The circuit:
  - Arduino MKR WiFi 1010, Arduino Uno WiFi Rev2 board, Arduino Nano 33 IoT,
    Arduino Nano 33 BLE, or Arduino Nano 33 BLE Sense board.
  This example code is in the public domain.
*/

#include <ArduinoBLE.h>

void setup() {
  Serial.begin(9600);
  while (!Serial);

  // begin initialization
  if (!BLE.begin()) {
    Serial.println("starting BLE failed!");

    while (1);
  }
    Serial.println("BLE Central scan");

  // start scanning for specific BlueUp Beacon
    BLE.scanForAddress("E1:78:79:7B:30:6C");

}

void loop() {
      
  // check if a peripheral has been discovered
  BLEDevice peripheral = BLE.available();

  if (peripheral) {
    // discovered a peripheral
    Serial.println("Discovered a peripheral");
    Serial.println("-----------------------");

    // print address
    Serial.print("Address: ");
    Serial.println(peripheral.address());

    // print the local name, if present
    if (peripheral.hasLocalName()) {
      Serial.print("Local Name: ");
      Serial.println(peripheral.localName());
    }

    // print the advertised service UUIDs, if present
    if (peripheral.hasAdvertisedServiceUuid()) {
      Serial.print("Service UUIDs: ");
      for (int i = 0; i < peripheral.advertisedServiceUuidCount(); i++) {
        Serial.print(peripheral.advertisedServiceUuid(i));
        Serial.print(" ");
      }
      Serial.println();
    }

    // print the RSSI
    Serial.print("RSSI: ");
    Serial.println(peripheral.rssi());
    if (peripheral.rssi() < -80) {
      Serial.println("Beacon is far!");
    }
    else{
      if(peripheral.rssi() < -65) {
        Serial.println("Beacon is near!");
      }
        else{
           Serial.println("Beacon is immediate!");
        }
    }

    Serial.println();

        Serial.println("Connecting ...");

    if (peripheral.connect()) {
      Serial.println("Connected");
    } else {
      Serial.println("Failed to connect!");
      return;
    }
    // BLE.stopScan();
  }
}



/* We are currently just scanning for a specific BlueUp beacon. We need to add a command to actually connect to the device. 
Then, from there we can start looking at characteristics of the device such as determining distance. *\